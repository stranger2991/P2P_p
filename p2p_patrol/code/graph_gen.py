#!/usr/bin/python
##########################################################################################################################################
#Graph Generator 
#Generate a random graph using networkX and export the graph based on the custom format described in the "README" file
#Input num_vertices,num_edges,target_list,num_IDS 
#OUtput os a file named new_graph which is input to the trivial & non_trivial algorithms 
#########################################################################################################################################
from networkx import *
from random import *
import os

nodes=0
edges=0
CUR_PATH='/home/nayak/Dropbox/Game_Theory_Project/code'	#Path is hardcoded!!! #enter cur dir path where cur file is present
print "Enter number of nodes and edges separated by spaces"
s = raw_input()
(nodes,edges) = map(int, s.split())

g=dense_gnm_random_graph(nodes,edges)								#generate a random graph 
write_weighted_edgelist(g,'test.weighted.edgelist')					#export edgelist to a file 

print "Enter target nodes separated by spaces "												#enter the list of targets
s = raw_input()
targets = map(int, s.split())


######read the edgelist generated by networkX and exports the graph based on our custom format#######
f1=open('test.weighted.edgelist','r')
lines=f1.readlines()
f1.close()
os.remove(CUR_PATH+'/test.weighted.edgelist')

write=[]

f2=open('new_graph','w')
nodes_edges_targets_IDS = '%d %d %d %d\n'%(nodes,edges,len(targets),len(targets)/2) 
write.append(nodes_edges_targets_IDS)

for i in targets:
	payoff=randrange(nodes/2,nodes)	
	target_payoff= '%d %d\n'%(i,payoff)
	write.append(target_payoff)

print "Enter Source nodes separated by spaces"
s = raw_input()
source_nodes=s+'\n'
write.append(source_nodes)

for l in lines:
	a=[int(i) for i in l.split()]
	edge_weight=randrange(1,nodes/4)
	edge_edgeweight='%d %d %d\n'%(a[0],a[1],edge_weight)
	write.append(edge_edgeweight)

f2.writelines(write)	
